package di5engine3;
import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.NativeLong;
/**
 * <i>native declaration : inc\rdi5api.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TRMemInfo extends Structure<TRMemInfo, TRMemInfo.ByValue, TRMemInfo.ByReference > {
	/**
	 * < トータルメモリサイズ<br>
	 * C type : INT64
	 */
	public NativeLong TotalPhys;
	/**
	 * < 使用可能メモリサイズ<br>
	 * C type : INT64
	 */
	public NativeLong AvailPhys;
	public TRMemInfo() {
		super();
	}
	/**
	 * @param TotalPhys < トータルメモリサイズ<br>
	 * C type : INT64<br>
	 * @param AvailPhys < 使用可能メモリサイズ<br>
	 * C type : INT64
	 */
	public TRMemInfo(NativeLong TotalPhys, NativeLong AvailPhys) {
		super();
		this.TotalPhys = TotalPhys;
		this.AvailPhys = AvailPhys;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected TRMemInfo newInstance() { return new TRMemInfo(); }
	public static TRMemInfo[] newArray(int arrayLength) {
		return Structure.newArray(TRMemInfo.class, arrayLength);
	}
	public static class ByReference extends TRMemInfo implements Structure.ByReference {
		
	};
	public static class ByValue extends TRMemInfo implements Structure.ByValue {
		
	};
}
