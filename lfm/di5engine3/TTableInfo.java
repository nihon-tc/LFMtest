package di5engine3;
import com.ochafik.lang.jnaerator.runtime.Structure;
/**
 * <i>native declaration : inc\di5api.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TTableInfo extends Structure<TTableInfo, TTableInfo.ByValue, TTableInfo.ByReference > {
	/// Table のID番号
	public int TableID;
	/// Tableの種類 0:Real 1:Master 2:Join
	public int TableKind;
	/// 存在するフィルターの数
	public int nFilter;
	/// 保持する集合の数(現在値)
	public int nSet;
	/// 全行数
	public int TotalRows;
	/**
	 * テーブル名称(0で終わる文字列)<br>
	 * C type : char[(256) + 8]
	 */
	public byte[] TableName = new byte[((256) + 8)];
	public TTableInfo() {
		super();
	}
	/**
	 * @param TableID Table のID番号<br>
	 * @param TableKind Tableの種類 0:Real 1:Master 2:Join<br>
	 * @param nFilter 存在するフィルターの数<br>
	 * @param nSet 保持する集合の数(現在値)<br>
	 * @param TotalRows 全行数<br>
	 * @param TableName テーブル名称(0で終わる文字列)<br>
	 * C type : char[(256) + 8]
	 */
	public TTableInfo(int TableID, int TableKind, int nFilter, int nSet, int TotalRows, byte TableName[]) {
		super();
		this.TableID = TableID;
		this.TableKind = TableKind;
		this.nFilter = nFilter;
		this.nSet = nSet;
		this.TotalRows = TotalRows;
		if (TableName.length != this.TableName.length) 
			throw new java.lang.IllegalArgumentException("Wrong array size !");
		this.TableName = TableName;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected TTableInfo newInstance() { return new TTableInfo(); }
	public static TTableInfo[] newArray(int arrayLength) {
		return Structure.newArray(TTableInfo.class, arrayLength);
	}
	public static class ByReference extends TTableInfo implements Structure.ByReference {
		
	};
	public static class ByValue extends TTableInfo implements Structure.ByValue {
		
	};
}
